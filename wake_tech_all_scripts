all_scripts.sh

#!/bin/bash

list=$(ls *.sh)

for script in $list
   do
      echo $script >> all_scripts
      echo "" >> all_scripts
      cat $script >> all_scripts
      echo "" >> all_scripts
      echo "===========================================" >> all_scripts
done

cat myfunctions >> all_scripts
echo "===============================" >> all_scripts
cat func2.sh >> all_scripts

===========================================
alpha.sh

#!/bin/bash

alpha="abcdefghijklmnopqrstuvwxyz"

echo "$alpha"

ltr1=$(echo "$alpha" | cut -c10)
ltr2=$(echo "$alpha" | cut -c1)
ltr3=`echo "$alpha" | cut -c3`
ltr4=`echo "$alpha" | cut -c11`

ltr_user="$ltr1$ltr2$ltr3$ltr4"

echo "$ltr_user"

===========================================
animal.sh

#!/bin/bash
#set -x

animals="dogs cats birds mice snakes ants"

for x in $animals
   do
      echo "I like $x"
      sleep 1
done

===========================================
arg.sh

#!/bin/bash

echo $0
echo $1
echo $2
echo $3
echo $4

===========================================
case.sh

#!/bin/bash

echo "Enter Yes or No"
read a

case $a in
  y|Y|yes|YES)echo "you entered the option 1";;
  n|N|no|NO) echo "you entered the option 2";;
  *) echo "you didn't enter a valid option";;
esac

===========================================
choice2.sh

#!/bin/bash

echo "Would you like to view the contents of File1 or File2? please enter 1 or 2:"

read UInput

case $UInput in

	1) find . -name file1 -exec cat {} \; ;;
	2) find . -name file2 -exec cat {} \; ;;
	*) echo "Wrong selection, exiting..." ;;
esac



===========================================
choice.sh

#!/bin/bash

echo "What file do you want to display?"
echo " 1 = file1"
echo " 2 = file2"
echo "          "
read answer

case $answer in
   1) clear;cat file1
   ;;
   2) clear;cat file2
   ;;
   *) echo "Wrong selection, exiting..."
      exit
   ;;
esac

===========================================
color.sh

#!/bin/bash

echo "What is your favorite color?"
read color

if [ -z "$color" ]
   then
      echo "You didn't enter anything!"
      ./color.sh
   else
      echo "your favorite color is: $color"
fi

===========================================
command_arg.sh

#!/bin/bash

echo "This is what you entered on the command line: $0"


===========================================
connectives.sh

#!/bin/bash

a=$1

b=$2

if [ "$a" = "xyz" -a "$a" = "$b" ]
   then
      echo "One of the coniditions is true"
   else
      echo "Neither condition is true"
fi

===========================================
copy_move.sh

#!/bin/bash
set -x

#create list of .sh files
list=$(ls *.sh)

#check to see if backup dir exist, if not create it
if [ -d "backup" ]
   then
      echo "backup directory exists"
   else
      echo "backup dir doesn't exist... creating it now"
      mkdir /home/student/backup  #create backup dir
fi

for file in $list
   do
      cp $file /home/student/backup  #copy files to backup dir
      sleep 1
done

echo ""
echo "All *.sh files copy to backup directory"

===========================================
count_files.sh

#!/bin/bash

echo "The number of .sh files = $(ls -l *.sh | wc -l)"
echo "The number of .bak files = $(ls -l *.bak | wc -l)"
echo "The number of .tar files = $(ls -l *.tara 2>/dev/null | wc -l)" 


===========================================
count_multiply.sh

#!/bin/bash

count=`ls -l | wc -l` #could also be $(ls -l | wc -l)

total=$(expr $count \* 2) #could also be `expr $count \* 2`

echo "The number of files = $count"
echo "The $count multiplied by 2 = $total"



===========================================
count.sh

#!/bin/bash

echo "The number of .sh files =" $(ls *.sh | wc -l)
echo ""
echo "The number of .bak files =" $(ls *.bak | wc -l)
echo ""
echo "The number of .tar files =" $(ls *.tar | wc -l)


===========================================
deploy.sh

#!/bin/bash

echo "Enter Date (YYYYMMDD format):"
read input

tar -cvf archive.tar *.sh

for file in $(ls *.sh)
   do
      touch -d"$input" $file
done

===========================================
dogs.sh

#!/bin/bash

echo "Do you like dogs? [y/n]"
read resp

if [ $resp = "y" ]  #Is there anything wrong here?
   then
      echo "Dogs like you too!"
   else
      echo "You must be a cat person"
fi

===========================================
elseif.sh

#!/bin/bash

echo "Enter a number:"
read a

echo "Enter another number:"
read b

if [ $a -gt $b ]
   then
      echo ""
      echo "$a is greater than $b"
      echo ""
   elif [ $a -eq $b ]
      then
         echo ""
         echo "$a is equal to $b"
         echo ""
   else
      echo ""
      echo "$a is NOT greater than $b"
      echo ""
fi

===========================================
else.sh

#!/bin/bash

echo "Enter a number:"
read a

echo "Enter another number:"
read b

if [ $a>=$b ]
   then
      echo ""
      echo "$a is greater than $b"
      echo ""
   else
      echo ""
      echo "$a is NOT greater than $b"
      echo ""
fi

===========================================
exist.sh

#!/bin/bash

if [ "$1" -ot "$2" ]
   then
      echo "$1 is older than $2"
   else
      echo "$1 is newer than $2"
fi

===========================================
func1.sh

#!/bin/bash

function say_goodbye {
   echo "goodbye"
}

say_goodbye

===========================================
func2.sh

#!/bin/bash

log() {
   echo "The date is: [$(date)]"
}

log

===========================================
hello_count.sh

#!/bin/bash

i=1

while [ "$i" -le 20 ]
   do
      echo "Hello World... count:$i"
      i=`expr "$i" + 1`
done

===========================================
hello_loop.sh

#!/bin/bash
set -x
x=1

while [ $x -le 20 ]
   do
      echo "Hello World"
      sleep 1
      x=$(expr $x + 1)
done

===========================================
hello.sh

#!/bin/bash

#This script shows command line arguments

firstname=$1
lastname=$2

echo ""
echo "Hello $firstname"
echo "Your last name is: $lastname"
echo "You have invoked the $0 command"


===========================================
if1.sh

#!/bin/bash

x=$1

y=$2

if [ $x -lt $y ]
   then
      echo ""
      echo "x=$x which is less than y=$y"
      echo ""
fi

===========================================
if2.sh

#!/bin/bash

echo "Enter a number:"
read a

echo "Enter another number:"
read b

if [ $a -gt $b ]
   then
      echo ""
      echo "$a is greater than $b"
      echo ""
fi

echo "ending"

===========================================
info2.sh

#!/bin/bash

echo $(hostname)
echo $USER
echo $(date +%B)

===========================================
info.sh

#!/bin/bash

variable1=$(hostname)
variable3=$(date +%B)

echo $variable1
echo $USER
echo $variable3

===========================================
inter_birthday.sh

#!/bin/bash

echo "What is your birth month?"
read bmonth

echo "What is your birth year?"
read byear

echo ""
echo "Your birth month is: $bmonth"
echo "Your birth year is: $byear"

===========================================
list.sh

#!/bin/bash
set -x

cd $HOME

ls *.file > number_list  #creating the list

for i in $(cat $HOME/number_list)
   do
      cp "$i" "$i".$(date +%m%d%Y)  #copying each file in the list to .bak
done

===========================================
loop_list.sh

#!/bin/bash
set -x

list="January February March April May June"

for month in $list
   do
      echo "This month is $month"
      sleep 1
      echo ""
done

===========================================
loop.sh

#!/bin/bash

for i in $(ls *.sh)
   do
      echo $i >> shell_scripts_from_class
      cat $i >> shell_scripts_from_class
      echo "===========================" >> shell_scripts_from_class
      echo "" >> shell_scripts_from_class
done

===========================================
loop_tester.sh

#!/bin/bash
set -x

x=1

while [ "$x" -le 10 ]
   do
      echo "Linux is easy" $x
      sleep 1
      ((x++))
done

===========================================
menu_script.sh

#!/bin/bash

clear
echo "@@@@@@@@@@@@@@@@@@@@@@@@@@"
echo "@ Select an option below @"
echo "@                        @"
echo "@     A = Option A       @"
echo "@     B = Option B       @"
echo "@     C = Option C       @"
echo "@                        @"
echo "@@@@@@@@@@@@@@@@@@@@@@@@@@"
read a

case $a in
   a|A) echo "You have selected: $a"
clear
   ;;
   b|B) echo "You have selected: $a"
clear
   ;;
   c|C) echo "You have selected: $a"
clear
   ;;
   *) echo "Wrong selection, please try again!"
      sleep 5
      ./menu_script.sh
   ;;
esac


===========================================
month_list.sh

#!/bin/bash

mylist=`cat $HOME/loop_list`

for i in $mylist
   do
      echo "This month is $i"
done

===========================================
name_status.sh

#!/bin/bash

echo "The name of my script is: $0"
echo ""
echo "The exit status is: $?"


===========================================
old_backup.sh

#!/bin/bash

#created timestamp and assigned to "stamp" variable
stamp=$(date +%m%d%Y)

#create list of .sh files
files=$(ls *.sh)

#for loop to copy .sh files to .backup
for i in $files
   do
      cp $i $i.bak #performing copy of each file
done

#Create archive of all .backup files
tar -cf "backup_files_$stamp.tar" *.bak

rm *.bak #Clean up

===========================================
pizza.sh

#!/bin/bash

echo "Do you like pizza? [y/n]"
read a

if [ "$a" = "y" -o "$a" = "Y" ]
   then
      echo "I do too!"
elif [ "$a" = "n" -o "$a" = "N" ]
   then
      echo "It must be the cheese"
   else
      echo "I don't understand your response!?!?!"
fi


===========================================
rearrange.sh

#!/bin/bash

a="UNIXL"

l=$(echo "$a" | cut -c5)
i=$(echo "$a" | cut -c3)
n=$(echo "$a" | cut -c2)
u=$(echo "$a" | cut -c1)
x=$(echo "$a" | cut -c4)

echo "$l$i$n$u$x"

===========================================
review_if.sh

#!/bin/bash

echo "What is the temperature outside?"
read temp

if [ $temp -eq 80 ]
   then
      clear
      echo "$temp is EQUAL to 80 degrees"
elif [ $temp -gt 80 ]
   then
      clear
      echo "$temp is HOTTER than 80 degrees"
   else
      clear
      echo "$temp is COLDER than 80 degrees"
fi

===========================================
say_hello.sh

#!/bin/bash

SAY_HELLO () {
echo "hello"
}

function say_hello {
echo "hello"
}

say_hello
SAY_HELLO

===========================================
script.sh

#!/bin/bash

me=$(date | cut -d" " -f2)
echo $me

if [ $me = "Feb" ]
   then
      echo "It's February!"
else
      echo "It's not February!"
fi

===========================================
search.sh

#!/bin/bash

match=$1  #filename
found=0   #initialize variable setting it to zero

#show usage if done incorrectly
[ $# -eq 0 ] && { echo "USAGE: $0 path_to_file/filename"; exit 1 }

#try to find file in $HOME
for f in $(ls $HOME/*)
   do
      if [$f = "$match" ]
         then
            echo "$match file found!"
            found=1  #file found, so incrementing variable
            break    #break the for loop to stop
      fi
done

===========================================
string.sh

#!/bin/bash

str=$(find . -name "*.txt" 2>/dev/null)

if [ -z "$str" ]
   then
      echo "The String is empty"
   else
      echo "The results are: $str"
fi

===========================================
today_script2.sh

#!/bin/bash

echo "Today's date is: " $(date)

===========================================
today_script.sh

#!/bin/bash

date

===========================================
user_script.sh

#!/bin/bash

echo "Name?"
read name
echo "Age?"
read age

cur_date=$(date "+%b %d %Y")

echo $cur_date >> user_data
echo $name >> user_data
echo $age >> user_data

===========================================
variable.sh

#!/bin/bash

today=$(date +%m/%d/%Y)

echo $today

read -p "Enter your name please: " name
echo $name

===========================================
while2.sh

#!/bin/bash
#set -x

x=1

while [ $x -le 300 ]
   do
      echo "Welcome to the Linux class!" $x >> logfile.log
      sleep 1
      x=$(expr $x + 1)
done

===========================================
while_ex.sh

#!/bin/bash
#set -x
x=1
while [ $x -le 300 ]
   do
      echo "Welcome to the Linux class!" $x >> logfile.log
      sleep 1
      x=$(expr $x + 1)
done

===========================================
while.sh

#!/bin/bash

a=2

i=1

while [ $i -le 20 ]
   do
      echo "$a * $i = $(expr $i \* "$a")"
      sleep 1
      #i=$(expr "$i" + 1)
      ((i++))  #shortcut method to incrementing variable
done

===========================================
HELLO () {
echo "Hello World"
}

COUNT_TO_TEN () {
x=0

while [ "$x" -lt 10 ]
   do
      echo "$x"
      sleep 1
      ((x++))
done
}

_ () { 
echo "Underscore" 
}

empty () {
hello
}
===============================
#!/bin/bash

log() {
   echo "The date is: [$(date)]"
}

log
